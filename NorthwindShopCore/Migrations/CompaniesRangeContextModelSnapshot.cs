// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NorthwindShopCore;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NorthwindShopCore.Migrations
{
    [DbContext(typeof(CompaniesRangeContext))]
    partial class CompaniesRangeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.company_sequence", "'company_sequence', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.companytype_sequence", "'companytype_sequence', '', '2', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.general_sequence", "'general_sequence', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.investor_sequence", "'investor_sequence', '', '1', '1', '', '', 'Int64', 'False'");

            modelBuilder.Entity("NorthwindShopCore.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Companyid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("companyid")
                        .HasDefaultValueSql("nextval('company_sequence'::regclass)");

                    b.Property<string>("Info");

                    b.Property<int?>("Investorid")
                        .HasColumnName("investorid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.Property<int>("Ownerid")
                        .HasColumnName("ownerid");

                    b.Property<int?>("Profitperyear")
                        .HasColumnName("profitperyear");

                    b.Property<int>("Typeid")
                        .HasColumnName("typeid");

                    b.HasKey("Id");

                    b.HasIndex("Investorid");

                    b.HasIndex("Ownerid");

                    b.HasIndex("Typeid");

                    b.ToTable("company");
                });

            modelBuilder.Entity("NorthwindShopCore.Companytype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Companytypeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("companytypeid")
                        .HasDefaultValueSql("nextval('companytype_sequence'::regclass)");

                    b.Property<string>("Info");

                    b.Property<string>("Nametype")
                        .HasColumnName("nametype");

                    b.HasKey("Id");

                    b.ToTable("companytype");
                });

            modelBuilder.Entity("NorthwindShopCore.Investor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Capital")
                        .HasColumnName("capital");

                    b.Property<int?>("Companyid")
                        .HasColumnName("companyid");

                    b.Property<string>("Info");

                    b.Property<int>("Investorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("investorid")
                        .HasDefaultValueSql("nextval('investor_sequence'::regclass)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("investor");
                });

            modelBuilder.Entity("NorthwindShopCore.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Info");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.Property<int>("Ownerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ownerid")
                        .HasDefaultValueSql("nextval('general_sequence'::regclass)");

                    b.Property<int?>("Salary")
                        .HasColumnName("salary");

                    b.HasKey("Id");

                    b.ToTable("owner");
                });

            modelBuilder.Entity("NorthwindShopCore.Company", b =>
                {
                    b.HasOne("NorthwindShopCore.Investor", "Investor")
                        .WithMany("Company")
                        .HasForeignKey("Investorid")
                        .HasConstraintName("investor_foreign");

                    b.HasOne("NorthwindShopCore.Owner", "Owner")
                        .WithMany("Company")
                        .HasForeignKey("Ownerid")
                        .HasConstraintName("owner_foreign");

                    b.HasOne("NorthwindShopCore.Companytype", "Type")
                        .WithMany("Company")
                        .HasForeignKey("Typeid")
                        .HasConstraintName("category_foreign");
                });
#pragma warning restore 612, 618
        }
    }
}
