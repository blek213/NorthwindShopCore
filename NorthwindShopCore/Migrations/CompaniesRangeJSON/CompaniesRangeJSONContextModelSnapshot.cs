// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NorthwindShopCore;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NorthwindShopCore.Migrations.CompaniesRangeJSON
{
    [DbContext(typeof(CompaniesRangeJSONContext))]
    partial class CompaniesRangeJSONContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("NorthwindShopCore.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Companyid");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnName("info")
                        .HasColumnType("json");

                    b.Property<int?>("Investorid");

                    b.Property<string>("Name");

                    b.Property<int>("Ownerid");

                    b.Property<int?>("Profitperyear");

                    b.Property<int>("Typeid");

                    b.HasKey("Id");

                    b.HasIndex("Investorid");

                    b.HasIndex("Ownerid");

                    b.HasIndex("Typeid");

                    b.ToTable("company");
                });

            modelBuilder.Entity("NorthwindShopCore.Companytype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Companytypeid");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnName("info")
                        .HasColumnType("json");

                    b.Property<string>("Nametype");

                    b.HasKey("Id");

                    b.ToTable("companytype");
                });

            modelBuilder.Entity("NorthwindShopCore.Investor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("Capital");

                    b.Property<int?>("Companyid");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnName("info")
                        .HasColumnType("json");

                    b.Property<int>("Investorid");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("investor");
                });

            modelBuilder.Entity("NorthwindShopCore.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnName("info")
                        .HasColumnType("json");

                    b.Property<string>("Name");

                    b.Property<int>("Ownerid");

                    b.Property<int?>("Salary");

                    b.HasKey("Id");

                    b.ToTable("owner");
                });

            modelBuilder.Entity("NorthwindShopCore.Company", b =>
                {
                    b.HasOne("NorthwindShopCore.Investor", "Investor")
                        .WithMany("Company")
                        .HasForeignKey("Investorid");

                    b.HasOne("NorthwindShopCore.Owner", "Owner")
                        .WithMany("Company")
                        .HasForeignKey("Ownerid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NorthwindShopCore.Companytype", "Type")
                        .WithMany("Company")
                        .HasForeignKey("Typeid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
